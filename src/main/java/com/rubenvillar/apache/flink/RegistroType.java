/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.rubenvillar.apache.flink;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RegistroType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2662423828102491268L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RegistroType\",\"namespace\":\"com.rubenvillar.apache.flink\",\"fields\":[{\"name\":\"anyo\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"codUnidadRegistral\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"codigoPostal\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"destinosInternos\",\"type\":{\"type\":\"record\",\"name\":\"DestinosInternosType\",\"fields\":[{\"name\":\"codigosUnidadesOrganizativasDestino\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"string\"],\"default\":null}},{\"name\":\"unidadesOrganizativasDestino\",\"type\":{\"type\":\"array\",\"items\":[\"null\",\"string\"],\"default\":null}}]}},{\"name\":\"documentoInteresado\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"entidad\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"estado\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"fechaAsiento\",\"type\":\"long\"},{\"name\":\"fechaDocumento\",\"type\":\"long\"},{\"name\":\"fechaValor\",\"type\":\"long\"},{\"name\":\"idEntidad\",\"type\":\"int\"},{\"name\":\"municipio\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"nombreInteresado\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"nucleo\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"numero\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"provincia\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"resultado\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"resumen\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"tipoDocumento\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"tipoInteresado\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"tipoVia\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"unidadRegistral\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"via\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"bloque\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"correoElectronico\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"escalera\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"letra\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"numeroTransporte\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"piso\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"portal\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"puerta\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"telefono\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"referenciaExpediente\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<RegistroType> ENCODER =
      new BinaryMessageEncoder<RegistroType>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RegistroType> DECODER =
      new BinaryMessageDecoder<RegistroType>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<RegistroType> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<RegistroType> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<RegistroType>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this RegistroType to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a RegistroType from a ByteBuffer. */
  public static RegistroType fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence anyo;
  @Deprecated public java.lang.CharSequence codUnidadRegistral;
  @Deprecated public java.lang.CharSequence codigoPostal;
  @Deprecated public com.rubenvillar.apache.flink.DestinosInternosType destinosInternos;
  @Deprecated public java.lang.CharSequence documentoInteresado;
  @Deprecated public java.lang.CharSequence entidad;
  @Deprecated public java.lang.CharSequence estado;
  @Deprecated public long fechaAsiento;
  @Deprecated public long fechaDocumento;
  @Deprecated public long fechaValor;
  @Deprecated public int idEntidad;
  @Deprecated public java.lang.CharSequence municipio;
  @Deprecated public java.lang.CharSequence nombreInteresado;
  @Deprecated public java.lang.CharSequence nucleo;
  @Deprecated public java.lang.CharSequence numero;
  @Deprecated public java.lang.CharSequence provincia;
  @Deprecated public java.lang.CharSequence resultado;
  @Deprecated public java.lang.CharSequence resumen;
  @Deprecated public java.lang.CharSequence tipoDocumento;
  @Deprecated public java.lang.CharSequence tipoInteresado;
  @Deprecated public java.lang.CharSequence tipoVia;
  @Deprecated public java.lang.CharSequence unidadRegistral;
  @Deprecated public java.lang.CharSequence via;
  @Deprecated public java.lang.CharSequence bloque;
  @Deprecated public java.lang.CharSequence correoElectronico;
  @Deprecated public java.lang.CharSequence escalera;
  @Deprecated public java.lang.CharSequence letra;
  @Deprecated public java.lang.CharSequence numeroTransporte;
  @Deprecated public java.lang.CharSequence piso;
  @Deprecated public java.lang.CharSequence portal;
  @Deprecated public java.lang.CharSequence puerta;
  @Deprecated public java.lang.CharSequence telefono;
  @Deprecated public java.lang.CharSequence referenciaExpediente;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RegistroType() {}

  /**
   * All-args constructor.
   * @param anyo The new value for anyo
   * @param codUnidadRegistral The new value for codUnidadRegistral
   * @param codigoPostal The new value for codigoPostal
   * @param destinosInternos The new value for destinosInternos
   * @param documentoInteresado The new value for documentoInteresado
   * @param entidad The new value for entidad
   * @param estado The new value for estado
   * @param fechaAsiento The new value for fechaAsiento
   * @param fechaDocumento The new value for fechaDocumento
   * @param fechaValor The new value for fechaValor
   * @param idEntidad The new value for idEntidad
   * @param municipio The new value for municipio
   * @param nombreInteresado The new value for nombreInteresado
   * @param nucleo The new value for nucleo
   * @param numero The new value for numero
   * @param provincia The new value for provincia
   * @param resultado The new value for resultado
   * @param resumen The new value for resumen
   * @param tipoDocumento The new value for tipoDocumento
   * @param tipoInteresado The new value for tipoInteresado
   * @param tipoVia The new value for tipoVia
   * @param unidadRegistral The new value for unidadRegistral
   * @param via The new value for via
   * @param bloque The new value for bloque
   * @param correoElectronico The new value for correoElectronico
   * @param escalera The new value for escalera
   * @param letra The new value for letra
   * @param numeroTransporte The new value for numeroTransporte
   * @param piso The new value for piso
   * @param portal The new value for portal
   * @param puerta The new value for puerta
   * @param telefono The new value for telefono
   * @param referenciaExpediente The new value for referenciaExpediente
   */
  public RegistroType(java.lang.CharSequence anyo, java.lang.CharSequence codUnidadRegistral, java.lang.CharSequence codigoPostal, com.rubenvillar.apache.flink.DestinosInternosType destinosInternos, java.lang.CharSequence documentoInteresado, java.lang.CharSequence entidad, java.lang.CharSequence estado, java.lang.Long fechaAsiento, java.lang.Long fechaDocumento, java.lang.Long fechaValor, java.lang.Integer idEntidad, java.lang.CharSequence municipio, java.lang.CharSequence nombreInteresado, java.lang.CharSequence nucleo, java.lang.CharSequence numero, java.lang.CharSequence provincia, java.lang.CharSequence resultado, java.lang.CharSequence resumen, java.lang.CharSequence tipoDocumento, java.lang.CharSequence tipoInteresado, java.lang.CharSequence tipoVia, java.lang.CharSequence unidadRegistral, java.lang.CharSequence via, java.lang.CharSequence bloque, java.lang.CharSequence correoElectronico, java.lang.CharSequence escalera, java.lang.CharSequence letra, java.lang.CharSequence numeroTransporte, java.lang.CharSequence piso, java.lang.CharSequence portal, java.lang.CharSequence puerta, java.lang.CharSequence telefono, java.lang.CharSequence referenciaExpediente) {
    this.anyo = anyo;
    this.codUnidadRegistral = codUnidadRegistral;
    this.codigoPostal = codigoPostal;
    this.destinosInternos = destinosInternos;
    this.documentoInteresado = documentoInteresado;
    this.entidad = entidad;
    this.estado = estado;
    this.fechaAsiento = fechaAsiento;
    this.fechaDocumento = fechaDocumento;
    this.fechaValor = fechaValor;
    this.idEntidad = idEntidad;
    this.municipio = municipio;
    this.nombreInteresado = nombreInteresado;
    this.nucleo = nucleo;
    this.numero = numero;
    this.provincia = provincia;
    this.resultado = resultado;
    this.resumen = resumen;
    this.tipoDocumento = tipoDocumento;
    this.tipoInteresado = tipoInteresado;
    this.tipoVia = tipoVia;
    this.unidadRegistral = unidadRegistral;
    this.via = via;
    this.bloque = bloque;
    this.correoElectronico = correoElectronico;
    this.escalera = escalera;
    this.letra = letra;
    this.numeroTransporte = numeroTransporte;
    this.piso = piso;
    this.portal = portal;
    this.puerta = puerta;
    this.telefono = telefono;
    this.referenciaExpediente = referenciaExpediente;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return anyo;
    case 1: return codUnidadRegistral;
    case 2: return codigoPostal;
    case 3: return destinosInternos;
    case 4: return documentoInteresado;
    case 5: return entidad;
    case 6: return estado;
    case 7: return fechaAsiento;
    case 8: return fechaDocumento;
    case 9: return fechaValor;
    case 10: return idEntidad;
    case 11: return municipio;
    case 12: return nombreInteresado;
    case 13: return nucleo;
    case 14: return numero;
    case 15: return provincia;
    case 16: return resultado;
    case 17: return resumen;
    case 18: return tipoDocumento;
    case 19: return tipoInteresado;
    case 20: return tipoVia;
    case 21: return unidadRegistral;
    case 22: return via;
    case 23: return bloque;
    case 24: return correoElectronico;
    case 25: return escalera;
    case 26: return letra;
    case 27: return numeroTransporte;
    case 28: return piso;
    case 29: return portal;
    case 30: return puerta;
    case 31: return telefono;
    case 32: return referenciaExpediente;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: anyo = (java.lang.CharSequence)value$; break;
    case 1: codUnidadRegistral = (java.lang.CharSequence)value$; break;
    case 2: codigoPostal = (java.lang.CharSequence)value$; break;
    case 3: destinosInternos = (com.rubenvillar.apache.flink.DestinosInternosType)value$; break;
    case 4: documentoInteresado = (java.lang.CharSequence)value$; break;
    case 5: entidad = (java.lang.CharSequence)value$; break;
    case 6: estado = (java.lang.CharSequence)value$; break;
    case 7: fechaAsiento = (java.lang.Long)value$; break;
    case 8: fechaDocumento = (java.lang.Long)value$; break;
    case 9: fechaValor = (java.lang.Long)value$; break;
    case 10: idEntidad = (java.lang.Integer)value$; break;
    case 11: municipio = (java.lang.CharSequence)value$; break;
    case 12: nombreInteresado = (java.lang.CharSequence)value$; break;
    case 13: nucleo = (java.lang.CharSequence)value$; break;
    case 14: numero = (java.lang.CharSequence)value$; break;
    case 15: provincia = (java.lang.CharSequence)value$; break;
    case 16: resultado = (java.lang.CharSequence)value$; break;
    case 17: resumen = (java.lang.CharSequence)value$; break;
    case 18: tipoDocumento = (java.lang.CharSequence)value$; break;
    case 19: tipoInteresado = (java.lang.CharSequence)value$; break;
    case 20: tipoVia = (java.lang.CharSequence)value$; break;
    case 21: unidadRegistral = (java.lang.CharSequence)value$; break;
    case 22: via = (java.lang.CharSequence)value$; break;
    case 23: bloque = (java.lang.CharSequence)value$; break;
    case 24: correoElectronico = (java.lang.CharSequence)value$; break;
    case 25: escalera = (java.lang.CharSequence)value$; break;
    case 26: letra = (java.lang.CharSequence)value$; break;
    case 27: numeroTransporte = (java.lang.CharSequence)value$; break;
    case 28: piso = (java.lang.CharSequence)value$; break;
    case 29: portal = (java.lang.CharSequence)value$; break;
    case 30: puerta = (java.lang.CharSequence)value$; break;
    case 31: telefono = (java.lang.CharSequence)value$; break;
    case 32: referenciaExpediente = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'anyo' field.
   * @return The value of the 'anyo' field.
   */
  public java.lang.CharSequence getAnyo() {
    return anyo;
  }

  /**
   * Sets the value of the 'anyo' field.
   * @param value the value to set.
   */
  public void setAnyo(java.lang.CharSequence value) {
    this.anyo = value;
  }

  /**
   * Gets the value of the 'codUnidadRegistral' field.
   * @return The value of the 'codUnidadRegistral' field.
   */
  public java.lang.CharSequence getCodUnidadRegistral() {
    return codUnidadRegistral;
  }

  /**
   * Sets the value of the 'codUnidadRegistral' field.
   * @param value the value to set.
   */
  public void setCodUnidadRegistral(java.lang.CharSequence value) {
    this.codUnidadRegistral = value;
  }

  /**
   * Gets the value of the 'codigoPostal' field.
   * @return The value of the 'codigoPostal' field.
   */
  public java.lang.CharSequence getCodigoPostal() {
    return codigoPostal;
  }

  /**
   * Sets the value of the 'codigoPostal' field.
   * @param value the value to set.
   */
  public void setCodigoPostal(java.lang.CharSequence value) {
    this.codigoPostal = value;
  }

  /**
   * Gets the value of the 'destinosInternos' field.
   * @return The value of the 'destinosInternos' field.
   */
  public com.rubenvillar.apache.flink.DestinosInternosType getDestinosInternos() {
    return destinosInternos;
  }

  /**
   * Sets the value of the 'destinosInternos' field.
   * @param value the value to set.
   */
  public void setDestinosInternos(com.rubenvillar.apache.flink.DestinosInternosType value) {
    this.destinosInternos = value;
  }

  /**
   * Gets the value of the 'documentoInteresado' field.
   * @return The value of the 'documentoInteresado' field.
   */
  public java.lang.CharSequence getDocumentoInteresado() {
    return documentoInteresado;
  }

  /**
   * Sets the value of the 'documentoInteresado' field.
   * @param value the value to set.
   */
  public void setDocumentoInteresado(java.lang.CharSequence value) {
    this.documentoInteresado = value;
  }

  /**
   * Gets the value of the 'entidad' field.
   * @return The value of the 'entidad' field.
   */
  public java.lang.CharSequence getEntidad() {
    return entidad;
  }

  /**
   * Sets the value of the 'entidad' field.
   * @param value the value to set.
   */
  public void setEntidad(java.lang.CharSequence value) {
    this.entidad = value;
  }

  /**
   * Gets the value of the 'estado' field.
   * @return The value of the 'estado' field.
   */
  public java.lang.CharSequence getEstado() {
    return estado;
  }

  /**
   * Sets the value of the 'estado' field.
   * @param value the value to set.
   */
  public void setEstado(java.lang.CharSequence value) {
    this.estado = value;
  }

  /**
   * Gets the value of the 'fechaAsiento' field.
   * @return The value of the 'fechaAsiento' field.
   */
  public java.lang.Long getFechaAsiento() {
    return fechaAsiento;
  }

  /**
   * Sets the value of the 'fechaAsiento' field.
   * @param value the value to set.
   */
  public void setFechaAsiento(java.lang.Long value) {
    this.fechaAsiento = value;
  }

  /**
   * Gets the value of the 'fechaDocumento' field.
   * @return The value of the 'fechaDocumento' field.
   */
  public java.lang.Long getFechaDocumento() {
    return fechaDocumento;
  }

  /**
   * Sets the value of the 'fechaDocumento' field.
   * @param value the value to set.
   */
  public void setFechaDocumento(java.lang.Long value) {
    this.fechaDocumento = value;
  }

  /**
   * Gets the value of the 'fechaValor' field.
   * @return The value of the 'fechaValor' field.
   */
  public java.lang.Long getFechaValor() {
    return fechaValor;
  }

  /**
   * Sets the value of the 'fechaValor' field.
   * @param value the value to set.
   */
  public void setFechaValor(java.lang.Long value) {
    this.fechaValor = value;
  }

  /**
   * Gets the value of the 'idEntidad' field.
   * @return The value of the 'idEntidad' field.
   */
  public java.lang.Integer getIdEntidad() {
    return idEntidad;
  }

  /**
   * Sets the value of the 'idEntidad' field.
   * @param value the value to set.
   */
  public void setIdEntidad(java.lang.Integer value) {
    this.idEntidad = value;
  }

  /**
   * Gets the value of the 'municipio' field.
   * @return The value of the 'municipio' field.
   */
  public java.lang.CharSequence getMunicipio() {
    return municipio;
  }

  /**
   * Sets the value of the 'municipio' field.
   * @param value the value to set.
   */
  public void setMunicipio(java.lang.CharSequence value) {
    this.municipio = value;
  }

  /**
   * Gets the value of the 'nombreInteresado' field.
   * @return The value of the 'nombreInteresado' field.
   */
  public java.lang.CharSequence getNombreInteresado() {
    return nombreInteresado;
  }

  /**
   * Sets the value of the 'nombreInteresado' field.
   * @param value the value to set.
   */
  public void setNombreInteresado(java.lang.CharSequence value) {
    this.nombreInteresado = value;
  }

  /**
   * Gets the value of the 'nucleo' field.
   * @return The value of the 'nucleo' field.
   */
  public java.lang.CharSequence getNucleo() {
    return nucleo;
  }

  /**
   * Sets the value of the 'nucleo' field.
   * @param value the value to set.
   */
  public void setNucleo(java.lang.CharSequence value) {
    this.nucleo = value;
  }

  /**
   * Gets the value of the 'numero' field.
   * @return The value of the 'numero' field.
   */
  public java.lang.CharSequence getNumero() {
    return numero;
  }

  /**
   * Sets the value of the 'numero' field.
   * @param value the value to set.
   */
  public void setNumero(java.lang.CharSequence value) {
    this.numero = value;
  }

  /**
   * Gets the value of the 'provincia' field.
   * @return The value of the 'provincia' field.
   */
  public java.lang.CharSequence getProvincia() {
    return provincia;
  }

  /**
   * Sets the value of the 'provincia' field.
   * @param value the value to set.
   */
  public void setProvincia(java.lang.CharSequence value) {
    this.provincia = value;
  }

  /**
   * Gets the value of the 'resultado' field.
   * @return The value of the 'resultado' field.
   */
  public java.lang.CharSequence getResultado() {
    return resultado;
  }

  /**
   * Sets the value of the 'resultado' field.
   * @param value the value to set.
   */
  public void setResultado(java.lang.CharSequence value) {
    this.resultado = value;
  }

  /**
   * Gets the value of the 'resumen' field.
   * @return The value of the 'resumen' field.
   */
  public java.lang.CharSequence getResumen() {
    return resumen;
  }

  /**
   * Sets the value of the 'resumen' field.
   * @param value the value to set.
   */
  public void setResumen(java.lang.CharSequence value) {
    this.resumen = value;
  }

  /**
   * Gets the value of the 'tipoDocumento' field.
   * @return The value of the 'tipoDocumento' field.
   */
  public java.lang.CharSequence getTipoDocumento() {
    return tipoDocumento;
  }

  /**
   * Sets the value of the 'tipoDocumento' field.
   * @param value the value to set.
   */
  public void setTipoDocumento(java.lang.CharSequence value) {
    this.tipoDocumento = value;
  }

  /**
   * Gets the value of the 'tipoInteresado' field.
   * @return The value of the 'tipoInteresado' field.
   */
  public java.lang.CharSequence getTipoInteresado() {
    return tipoInteresado;
  }

  /**
   * Sets the value of the 'tipoInteresado' field.
   * @param value the value to set.
   */
  public void setTipoInteresado(java.lang.CharSequence value) {
    this.tipoInteresado = value;
  }

  /**
   * Gets the value of the 'tipoVia' field.
   * @return The value of the 'tipoVia' field.
   */
  public java.lang.CharSequence getTipoVia() {
    return tipoVia;
  }

  /**
   * Sets the value of the 'tipoVia' field.
   * @param value the value to set.
   */
  public void setTipoVia(java.lang.CharSequence value) {
    this.tipoVia = value;
  }

  /**
   * Gets the value of the 'unidadRegistral' field.
   * @return The value of the 'unidadRegistral' field.
   */
  public java.lang.CharSequence getUnidadRegistral() {
    return unidadRegistral;
  }

  /**
   * Sets the value of the 'unidadRegistral' field.
   * @param value the value to set.
   */
  public void setUnidadRegistral(java.lang.CharSequence value) {
    this.unidadRegistral = value;
  }

  /**
   * Gets the value of the 'via' field.
   * @return The value of the 'via' field.
   */
  public java.lang.CharSequence getVia() {
    return via;
  }

  /**
   * Sets the value of the 'via' field.
   * @param value the value to set.
   */
  public void setVia(java.lang.CharSequence value) {
    this.via = value;
  }

  /**
   * Gets the value of the 'bloque' field.
   * @return The value of the 'bloque' field.
   */
  public java.lang.CharSequence getBloque() {
    return bloque;
  }

  /**
   * Sets the value of the 'bloque' field.
   * @param value the value to set.
   */
  public void setBloque(java.lang.CharSequence value) {
    this.bloque = value;
  }

  /**
   * Gets the value of the 'correoElectronico' field.
   * @return The value of the 'correoElectronico' field.
   */
  public java.lang.CharSequence getCorreoElectronico() {
    return correoElectronico;
  }

  /**
   * Sets the value of the 'correoElectronico' field.
   * @param value the value to set.
   */
  public void setCorreoElectronico(java.lang.CharSequence value) {
    this.correoElectronico = value;
  }

  /**
   * Gets the value of the 'escalera' field.
   * @return The value of the 'escalera' field.
   */
  public java.lang.CharSequence getEscalera() {
    return escalera;
  }

  /**
   * Sets the value of the 'escalera' field.
   * @param value the value to set.
   */
  public void setEscalera(java.lang.CharSequence value) {
    this.escalera = value;
  }

  /**
   * Gets the value of the 'letra' field.
   * @return The value of the 'letra' field.
   */
  public java.lang.CharSequence getLetra() {
    return letra;
  }

  /**
   * Sets the value of the 'letra' field.
   * @param value the value to set.
   */
  public void setLetra(java.lang.CharSequence value) {
    this.letra = value;
  }

  /**
   * Gets the value of the 'numeroTransporte' field.
   * @return The value of the 'numeroTransporte' field.
   */
  public java.lang.CharSequence getNumeroTransporte() {
    return numeroTransporte;
  }

  /**
   * Sets the value of the 'numeroTransporte' field.
   * @param value the value to set.
   */
  public void setNumeroTransporte(java.lang.CharSequence value) {
    this.numeroTransporte = value;
  }

  /**
   * Gets the value of the 'piso' field.
   * @return The value of the 'piso' field.
   */
  public java.lang.CharSequence getPiso() {
    return piso;
  }

  /**
   * Sets the value of the 'piso' field.
   * @param value the value to set.
   */
  public void setPiso(java.lang.CharSequence value) {
    this.piso = value;
  }

  /**
   * Gets the value of the 'portal' field.
   * @return The value of the 'portal' field.
   */
  public java.lang.CharSequence getPortal() {
    return portal;
  }

  /**
   * Sets the value of the 'portal' field.
   * @param value the value to set.
   */
  public void setPortal(java.lang.CharSequence value) {
    this.portal = value;
  }

  /**
   * Gets the value of the 'puerta' field.
   * @return The value of the 'puerta' field.
   */
  public java.lang.CharSequence getPuerta() {
    return puerta;
  }

  /**
   * Sets the value of the 'puerta' field.
   * @param value the value to set.
   */
  public void setPuerta(java.lang.CharSequence value) {
    this.puerta = value;
  }

  /**
   * Gets the value of the 'telefono' field.
   * @return The value of the 'telefono' field.
   */
  public java.lang.CharSequence getTelefono() {
    return telefono;
  }

  /**
   * Sets the value of the 'telefono' field.
   * @param value the value to set.
   */
  public void setTelefono(java.lang.CharSequence value) {
    this.telefono = value;
  }

  /**
   * Gets the value of the 'referenciaExpediente' field.
   * @return The value of the 'referenciaExpediente' field.
   */
  public java.lang.CharSequence getReferenciaExpediente() {
    return referenciaExpediente;
  }

  /**
   * Sets the value of the 'referenciaExpediente' field.
   * @param value the value to set.
   */
  public void setReferenciaExpediente(java.lang.CharSequence value) {
    this.referenciaExpediente = value;
  }

  /**
   * Creates a new RegistroType RecordBuilder.
   * @return A new RegistroType RecordBuilder
   */
  public static com.rubenvillar.apache.flink.RegistroType.Builder newBuilder() {
    return new com.rubenvillar.apache.flink.RegistroType.Builder();
  }

  /**
   * Creates a new RegistroType RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RegistroType RecordBuilder
   */
  public static com.rubenvillar.apache.flink.RegistroType.Builder newBuilder(com.rubenvillar.apache.flink.RegistroType.Builder other) {
    return new com.rubenvillar.apache.flink.RegistroType.Builder(other);
  }

  /**
   * Creates a new RegistroType RecordBuilder by copying an existing RegistroType instance.
   * @param other The existing instance to copy.
   * @return A new RegistroType RecordBuilder
   */
  public static com.rubenvillar.apache.flink.RegistroType.Builder newBuilder(com.rubenvillar.apache.flink.RegistroType other) {
    return new com.rubenvillar.apache.flink.RegistroType.Builder(other);
  }

  /**
   * RecordBuilder for RegistroType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RegistroType>
    implements org.apache.avro.data.RecordBuilder<RegistroType> {

    private java.lang.CharSequence anyo;
    private java.lang.CharSequence codUnidadRegistral;
    private java.lang.CharSequence codigoPostal;
    private com.rubenvillar.apache.flink.DestinosInternosType destinosInternos;
    private com.rubenvillar.apache.flink.DestinosInternosType.Builder destinosInternosBuilder;
    private java.lang.CharSequence documentoInteresado;
    private java.lang.CharSequence entidad;
    private java.lang.CharSequence estado;
    private long fechaAsiento;
    private long fechaDocumento;
    private long fechaValor;
    private int idEntidad;
    private java.lang.CharSequence municipio;
    private java.lang.CharSequence nombreInteresado;
    private java.lang.CharSequence nucleo;
    private java.lang.CharSequence numero;
    private java.lang.CharSequence provincia;
    private java.lang.CharSequence resultado;
    private java.lang.CharSequence resumen;
    private java.lang.CharSequence tipoDocumento;
    private java.lang.CharSequence tipoInteresado;
    private java.lang.CharSequence tipoVia;
    private java.lang.CharSequence unidadRegistral;
    private java.lang.CharSequence via;
    private java.lang.CharSequence bloque;
    private java.lang.CharSequence correoElectronico;
    private java.lang.CharSequence escalera;
    private java.lang.CharSequence letra;
    private java.lang.CharSequence numeroTransporte;
    private java.lang.CharSequence piso;
    private java.lang.CharSequence portal;
    private java.lang.CharSequence puerta;
    private java.lang.CharSequence telefono;
    private java.lang.CharSequence referenciaExpediente;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.rubenvillar.apache.flink.RegistroType.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.anyo)) {
        this.anyo = data().deepCopy(fields()[0].schema(), other.anyo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.codUnidadRegistral)) {
        this.codUnidadRegistral = data().deepCopy(fields()[1].schema(), other.codUnidadRegistral);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.codigoPostal)) {
        this.codigoPostal = data().deepCopy(fields()[2].schema(), other.codigoPostal);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.destinosInternos)) {
        this.destinosInternos = data().deepCopy(fields()[3].schema(), other.destinosInternos);
        fieldSetFlags()[3] = true;
      }
      if (other.hasDestinosInternosBuilder()) {
        this.destinosInternosBuilder = com.rubenvillar.apache.flink.DestinosInternosType.newBuilder(other.getDestinosInternosBuilder());
      }
      if (isValidValue(fields()[4], other.documentoInteresado)) {
        this.documentoInteresado = data().deepCopy(fields()[4].schema(), other.documentoInteresado);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.entidad)) {
        this.entidad = data().deepCopy(fields()[5].schema(), other.entidad);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.estado)) {
        this.estado = data().deepCopy(fields()[6].schema(), other.estado);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.fechaAsiento)) {
        this.fechaAsiento = data().deepCopy(fields()[7].schema(), other.fechaAsiento);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.fechaDocumento)) {
        this.fechaDocumento = data().deepCopy(fields()[8].schema(), other.fechaDocumento);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.fechaValor)) {
        this.fechaValor = data().deepCopy(fields()[9].schema(), other.fechaValor);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.idEntidad)) {
        this.idEntidad = data().deepCopy(fields()[10].schema(), other.idEntidad);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.municipio)) {
        this.municipio = data().deepCopy(fields()[11].schema(), other.municipio);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.nombreInteresado)) {
        this.nombreInteresado = data().deepCopy(fields()[12].schema(), other.nombreInteresado);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.nucleo)) {
        this.nucleo = data().deepCopy(fields()[13].schema(), other.nucleo);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.numero)) {
        this.numero = data().deepCopy(fields()[14].schema(), other.numero);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.provincia)) {
        this.provincia = data().deepCopy(fields()[15].schema(), other.provincia);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.resultado)) {
        this.resultado = data().deepCopy(fields()[16].schema(), other.resultado);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.resumen)) {
        this.resumen = data().deepCopy(fields()[17].schema(), other.resumen);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.tipoDocumento)) {
        this.tipoDocumento = data().deepCopy(fields()[18].schema(), other.tipoDocumento);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.tipoInteresado)) {
        this.tipoInteresado = data().deepCopy(fields()[19].schema(), other.tipoInteresado);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.tipoVia)) {
        this.tipoVia = data().deepCopy(fields()[20].schema(), other.tipoVia);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.unidadRegistral)) {
        this.unidadRegistral = data().deepCopy(fields()[21].schema(), other.unidadRegistral);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.via)) {
        this.via = data().deepCopy(fields()[22].schema(), other.via);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.bloque)) {
        this.bloque = data().deepCopy(fields()[23].schema(), other.bloque);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.correoElectronico)) {
        this.correoElectronico = data().deepCopy(fields()[24].schema(), other.correoElectronico);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.escalera)) {
        this.escalera = data().deepCopy(fields()[25].schema(), other.escalera);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.letra)) {
        this.letra = data().deepCopy(fields()[26].schema(), other.letra);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.numeroTransporte)) {
        this.numeroTransporte = data().deepCopy(fields()[27].schema(), other.numeroTransporte);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.piso)) {
        this.piso = data().deepCopy(fields()[28].schema(), other.piso);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.portal)) {
        this.portal = data().deepCopy(fields()[29].schema(), other.portal);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.puerta)) {
        this.puerta = data().deepCopy(fields()[30].schema(), other.puerta);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.telefono)) {
        this.telefono = data().deepCopy(fields()[31].schema(), other.telefono);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.referenciaExpediente)) {
        this.referenciaExpediente = data().deepCopy(fields()[32].schema(), other.referenciaExpediente);
        fieldSetFlags()[32] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing RegistroType instance
     * @param other The existing instance to copy.
     */
    private Builder(com.rubenvillar.apache.flink.RegistroType other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.anyo)) {
        this.anyo = data().deepCopy(fields()[0].schema(), other.anyo);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.codUnidadRegistral)) {
        this.codUnidadRegistral = data().deepCopy(fields()[1].schema(), other.codUnidadRegistral);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.codigoPostal)) {
        this.codigoPostal = data().deepCopy(fields()[2].schema(), other.codigoPostal);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.destinosInternos)) {
        this.destinosInternos = data().deepCopy(fields()[3].schema(), other.destinosInternos);
        fieldSetFlags()[3] = true;
      }
      this.destinosInternosBuilder = null;
      if (isValidValue(fields()[4], other.documentoInteresado)) {
        this.documentoInteresado = data().deepCopy(fields()[4].schema(), other.documentoInteresado);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.entidad)) {
        this.entidad = data().deepCopy(fields()[5].schema(), other.entidad);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.estado)) {
        this.estado = data().deepCopy(fields()[6].schema(), other.estado);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.fechaAsiento)) {
        this.fechaAsiento = data().deepCopy(fields()[7].schema(), other.fechaAsiento);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.fechaDocumento)) {
        this.fechaDocumento = data().deepCopy(fields()[8].schema(), other.fechaDocumento);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.fechaValor)) {
        this.fechaValor = data().deepCopy(fields()[9].schema(), other.fechaValor);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.idEntidad)) {
        this.idEntidad = data().deepCopy(fields()[10].schema(), other.idEntidad);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.municipio)) {
        this.municipio = data().deepCopy(fields()[11].schema(), other.municipio);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.nombreInteresado)) {
        this.nombreInteresado = data().deepCopy(fields()[12].schema(), other.nombreInteresado);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.nucleo)) {
        this.nucleo = data().deepCopy(fields()[13].schema(), other.nucleo);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.numero)) {
        this.numero = data().deepCopy(fields()[14].schema(), other.numero);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.provincia)) {
        this.provincia = data().deepCopy(fields()[15].schema(), other.provincia);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.resultado)) {
        this.resultado = data().deepCopy(fields()[16].schema(), other.resultado);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.resumen)) {
        this.resumen = data().deepCopy(fields()[17].schema(), other.resumen);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.tipoDocumento)) {
        this.tipoDocumento = data().deepCopy(fields()[18].schema(), other.tipoDocumento);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.tipoInteresado)) {
        this.tipoInteresado = data().deepCopy(fields()[19].schema(), other.tipoInteresado);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.tipoVia)) {
        this.tipoVia = data().deepCopy(fields()[20].schema(), other.tipoVia);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.unidadRegistral)) {
        this.unidadRegistral = data().deepCopy(fields()[21].schema(), other.unidadRegistral);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.via)) {
        this.via = data().deepCopy(fields()[22].schema(), other.via);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.bloque)) {
        this.bloque = data().deepCopy(fields()[23].schema(), other.bloque);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.correoElectronico)) {
        this.correoElectronico = data().deepCopy(fields()[24].schema(), other.correoElectronico);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.escalera)) {
        this.escalera = data().deepCopy(fields()[25].schema(), other.escalera);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.letra)) {
        this.letra = data().deepCopy(fields()[26].schema(), other.letra);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.numeroTransporte)) {
        this.numeroTransporte = data().deepCopy(fields()[27].schema(), other.numeroTransporte);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.piso)) {
        this.piso = data().deepCopy(fields()[28].schema(), other.piso);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.portal)) {
        this.portal = data().deepCopy(fields()[29].schema(), other.portal);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.puerta)) {
        this.puerta = data().deepCopy(fields()[30].schema(), other.puerta);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.telefono)) {
        this.telefono = data().deepCopy(fields()[31].schema(), other.telefono);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.referenciaExpediente)) {
        this.referenciaExpediente = data().deepCopy(fields()[32].schema(), other.referenciaExpediente);
        fieldSetFlags()[32] = true;
      }
    }

    /**
      * Gets the value of the 'anyo' field.
      * @return The value.
      */
    public java.lang.CharSequence getAnyo() {
      return anyo;
    }

    /**
      * Sets the value of the 'anyo' field.
      * @param value The value of 'anyo'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setAnyo(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.anyo = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'anyo' field has been set.
      * @return True if the 'anyo' field has been set, false otherwise.
      */
    public boolean hasAnyo() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'anyo' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearAnyo() {
      anyo = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'codUnidadRegistral' field.
      * @return The value.
      */
    public java.lang.CharSequence getCodUnidadRegistral() {
      return codUnidadRegistral;
    }

    /**
      * Sets the value of the 'codUnidadRegistral' field.
      * @param value The value of 'codUnidadRegistral'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setCodUnidadRegistral(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.codUnidadRegistral = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'codUnidadRegistral' field has been set.
      * @return True if the 'codUnidadRegistral' field has been set, false otherwise.
      */
    public boolean hasCodUnidadRegistral() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'codUnidadRegistral' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearCodUnidadRegistral() {
      codUnidadRegistral = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'codigoPostal' field.
      * @return The value.
      */
    public java.lang.CharSequence getCodigoPostal() {
      return codigoPostal;
    }

    /**
      * Sets the value of the 'codigoPostal' field.
      * @param value The value of 'codigoPostal'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setCodigoPostal(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.codigoPostal = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'codigoPostal' field has been set.
      * @return True if the 'codigoPostal' field has been set, false otherwise.
      */
    public boolean hasCodigoPostal() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'codigoPostal' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearCodigoPostal() {
      codigoPostal = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'destinosInternos' field.
      * @return The value.
      */
    public com.rubenvillar.apache.flink.DestinosInternosType getDestinosInternos() {
      return destinosInternos;
    }

    /**
      * Sets the value of the 'destinosInternos' field.
      * @param value The value of 'destinosInternos'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setDestinosInternos(com.rubenvillar.apache.flink.DestinosInternosType value) {
      validate(fields()[3], value);
      this.destinosInternosBuilder = null;
      this.destinosInternos = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'destinosInternos' field has been set.
      * @return True if the 'destinosInternos' field has been set, false otherwise.
      */
    public boolean hasDestinosInternos() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'destinosInternos' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.rubenvillar.apache.flink.DestinosInternosType.Builder getDestinosInternosBuilder() {
      if (destinosInternosBuilder == null) {
        if (hasDestinosInternos()) {
          setDestinosInternosBuilder(com.rubenvillar.apache.flink.DestinosInternosType.newBuilder(destinosInternos));
        } else {
          setDestinosInternosBuilder(com.rubenvillar.apache.flink.DestinosInternosType.newBuilder());
        }
      }
      return destinosInternosBuilder;
    }

    /**
     * Sets the Builder instance for the 'destinosInternos' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.rubenvillar.apache.flink.RegistroType.Builder setDestinosInternosBuilder(com.rubenvillar.apache.flink.DestinosInternosType.Builder value) {
      clearDestinosInternos();
      destinosInternosBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'destinosInternos' field has an active Builder instance
     * @return True if the 'destinosInternos' field has an active Builder instance
     */
    public boolean hasDestinosInternosBuilder() {
      return destinosInternosBuilder != null;
    }

    /**
      * Clears the value of the 'destinosInternos' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearDestinosInternos() {
      destinosInternos = null;
      destinosInternosBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'documentoInteresado' field.
      * @return The value.
      */
    public java.lang.CharSequence getDocumentoInteresado() {
      return documentoInteresado;
    }

    /**
      * Sets the value of the 'documentoInteresado' field.
      * @param value The value of 'documentoInteresado'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setDocumentoInteresado(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.documentoInteresado = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'documentoInteresado' field has been set.
      * @return True if the 'documentoInteresado' field has been set, false otherwise.
      */
    public boolean hasDocumentoInteresado() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'documentoInteresado' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearDocumentoInteresado() {
      documentoInteresado = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'entidad' field.
      * @return The value.
      */
    public java.lang.CharSequence getEntidad() {
      return entidad;
    }

    /**
      * Sets the value of the 'entidad' field.
      * @param value The value of 'entidad'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setEntidad(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.entidad = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'entidad' field has been set.
      * @return True if the 'entidad' field has been set, false otherwise.
      */
    public boolean hasEntidad() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'entidad' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearEntidad() {
      entidad = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'estado' field.
      * @return The value.
      */
    public java.lang.CharSequence getEstado() {
      return estado;
    }

    /**
      * Sets the value of the 'estado' field.
      * @param value The value of 'estado'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setEstado(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.estado = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'estado' field has been set.
      * @return True if the 'estado' field has been set, false otherwise.
      */
    public boolean hasEstado() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'estado' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearEstado() {
      estado = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'fechaAsiento' field.
      * @return The value.
      */
    public java.lang.Long getFechaAsiento() {
      return fechaAsiento;
    }

    /**
      * Sets the value of the 'fechaAsiento' field.
      * @param value The value of 'fechaAsiento'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setFechaAsiento(long value) {
      validate(fields()[7], value);
      this.fechaAsiento = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'fechaAsiento' field has been set.
      * @return True if the 'fechaAsiento' field has been set, false otherwise.
      */
    public boolean hasFechaAsiento() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'fechaAsiento' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearFechaAsiento() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'fechaDocumento' field.
      * @return The value.
      */
    public java.lang.Long getFechaDocumento() {
      return fechaDocumento;
    }

    /**
      * Sets the value of the 'fechaDocumento' field.
      * @param value The value of 'fechaDocumento'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setFechaDocumento(long value) {
      validate(fields()[8], value);
      this.fechaDocumento = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'fechaDocumento' field has been set.
      * @return True if the 'fechaDocumento' field has been set, false otherwise.
      */
    public boolean hasFechaDocumento() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'fechaDocumento' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearFechaDocumento() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'fechaValor' field.
      * @return The value.
      */
    public java.lang.Long getFechaValor() {
      return fechaValor;
    }

    /**
      * Sets the value of the 'fechaValor' field.
      * @param value The value of 'fechaValor'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setFechaValor(long value) {
      validate(fields()[9], value);
      this.fechaValor = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'fechaValor' field has been set.
      * @return True if the 'fechaValor' field has been set, false otherwise.
      */
    public boolean hasFechaValor() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'fechaValor' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearFechaValor() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'idEntidad' field.
      * @return The value.
      */
    public java.lang.Integer getIdEntidad() {
      return idEntidad;
    }

    /**
      * Sets the value of the 'idEntidad' field.
      * @param value The value of 'idEntidad'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setIdEntidad(int value) {
      validate(fields()[10], value);
      this.idEntidad = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'idEntidad' field has been set.
      * @return True if the 'idEntidad' field has been set, false otherwise.
      */
    public boolean hasIdEntidad() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'idEntidad' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearIdEntidad() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'municipio' field.
      * @return The value.
      */
    public java.lang.CharSequence getMunicipio() {
      return municipio;
    }

    /**
      * Sets the value of the 'municipio' field.
      * @param value The value of 'municipio'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setMunicipio(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.municipio = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'municipio' field has been set.
      * @return True if the 'municipio' field has been set, false otherwise.
      */
    public boolean hasMunicipio() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'municipio' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearMunicipio() {
      municipio = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'nombreInteresado' field.
      * @return The value.
      */
    public java.lang.CharSequence getNombreInteresado() {
      return nombreInteresado;
    }

    /**
      * Sets the value of the 'nombreInteresado' field.
      * @param value The value of 'nombreInteresado'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setNombreInteresado(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.nombreInteresado = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'nombreInteresado' field has been set.
      * @return True if the 'nombreInteresado' field has been set, false otherwise.
      */
    public boolean hasNombreInteresado() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'nombreInteresado' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearNombreInteresado() {
      nombreInteresado = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'nucleo' field.
      * @return The value.
      */
    public java.lang.CharSequence getNucleo() {
      return nucleo;
    }

    /**
      * Sets the value of the 'nucleo' field.
      * @param value The value of 'nucleo'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setNucleo(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.nucleo = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'nucleo' field has been set.
      * @return True if the 'nucleo' field has been set, false otherwise.
      */
    public boolean hasNucleo() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'nucleo' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearNucleo() {
      nucleo = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'numero' field.
      * @return The value.
      */
    public java.lang.CharSequence getNumero() {
      return numero;
    }

    /**
      * Sets the value of the 'numero' field.
      * @param value The value of 'numero'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setNumero(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.numero = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'numero' field has been set.
      * @return True if the 'numero' field has been set, false otherwise.
      */
    public boolean hasNumero() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'numero' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearNumero() {
      numero = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'provincia' field.
      * @return The value.
      */
    public java.lang.CharSequence getProvincia() {
      return provincia;
    }

    /**
      * Sets the value of the 'provincia' field.
      * @param value The value of 'provincia'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setProvincia(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.provincia = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'provincia' field has been set.
      * @return True if the 'provincia' field has been set, false otherwise.
      */
    public boolean hasProvincia() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'provincia' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearProvincia() {
      provincia = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'resultado' field.
      * @return The value.
      */
    public java.lang.CharSequence getResultado() {
      return resultado;
    }

    /**
      * Sets the value of the 'resultado' field.
      * @param value The value of 'resultado'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setResultado(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.resultado = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'resultado' field has been set.
      * @return True if the 'resultado' field has been set, false otherwise.
      */
    public boolean hasResultado() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'resultado' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearResultado() {
      resultado = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'resumen' field.
      * @return The value.
      */
    public java.lang.CharSequence getResumen() {
      return resumen;
    }

    /**
      * Sets the value of the 'resumen' field.
      * @param value The value of 'resumen'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setResumen(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.resumen = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'resumen' field has been set.
      * @return True if the 'resumen' field has been set, false otherwise.
      */
    public boolean hasResumen() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'resumen' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearResumen() {
      resumen = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'tipoDocumento' field.
      * @return The value.
      */
    public java.lang.CharSequence getTipoDocumento() {
      return tipoDocumento;
    }

    /**
      * Sets the value of the 'tipoDocumento' field.
      * @param value The value of 'tipoDocumento'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setTipoDocumento(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.tipoDocumento = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'tipoDocumento' field has been set.
      * @return True if the 'tipoDocumento' field has been set, false otherwise.
      */
    public boolean hasTipoDocumento() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'tipoDocumento' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearTipoDocumento() {
      tipoDocumento = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'tipoInteresado' field.
      * @return The value.
      */
    public java.lang.CharSequence getTipoInteresado() {
      return tipoInteresado;
    }

    /**
      * Sets the value of the 'tipoInteresado' field.
      * @param value The value of 'tipoInteresado'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setTipoInteresado(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.tipoInteresado = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'tipoInteresado' field has been set.
      * @return True if the 'tipoInteresado' field has been set, false otherwise.
      */
    public boolean hasTipoInteresado() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'tipoInteresado' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearTipoInteresado() {
      tipoInteresado = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'tipoVia' field.
      * @return The value.
      */
    public java.lang.CharSequence getTipoVia() {
      return tipoVia;
    }

    /**
      * Sets the value of the 'tipoVia' field.
      * @param value The value of 'tipoVia'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setTipoVia(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.tipoVia = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'tipoVia' field has been set.
      * @return True if the 'tipoVia' field has been set, false otherwise.
      */
    public boolean hasTipoVia() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'tipoVia' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearTipoVia() {
      tipoVia = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'unidadRegistral' field.
      * @return The value.
      */
    public java.lang.CharSequence getUnidadRegistral() {
      return unidadRegistral;
    }

    /**
      * Sets the value of the 'unidadRegistral' field.
      * @param value The value of 'unidadRegistral'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setUnidadRegistral(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.unidadRegistral = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'unidadRegistral' field has been set.
      * @return True if the 'unidadRegistral' field has been set, false otherwise.
      */
    public boolean hasUnidadRegistral() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'unidadRegistral' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearUnidadRegistral() {
      unidadRegistral = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'via' field.
      * @return The value.
      */
    public java.lang.CharSequence getVia() {
      return via;
    }

    /**
      * Sets the value of the 'via' field.
      * @param value The value of 'via'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setVia(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.via = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'via' field has been set.
      * @return True if the 'via' field has been set, false otherwise.
      */
    public boolean hasVia() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'via' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearVia() {
      via = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'bloque' field.
      * @return The value.
      */
    public java.lang.CharSequence getBloque() {
      return bloque;
    }

    /**
      * Sets the value of the 'bloque' field.
      * @param value The value of 'bloque'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setBloque(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.bloque = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'bloque' field has been set.
      * @return True if the 'bloque' field has been set, false otherwise.
      */
    public boolean hasBloque() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'bloque' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearBloque() {
      bloque = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'correoElectronico' field.
      * @return The value.
      */
    public java.lang.CharSequence getCorreoElectronico() {
      return correoElectronico;
    }

    /**
      * Sets the value of the 'correoElectronico' field.
      * @param value The value of 'correoElectronico'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setCorreoElectronico(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.correoElectronico = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'correoElectronico' field has been set.
      * @return True if the 'correoElectronico' field has been set, false otherwise.
      */
    public boolean hasCorreoElectronico() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'correoElectronico' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearCorreoElectronico() {
      correoElectronico = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'escalera' field.
      * @return The value.
      */
    public java.lang.CharSequence getEscalera() {
      return escalera;
    }

    /**
      * Sets the value of the 'escalera' field.
      * @param value The value of 'escalera'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setEscalera(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.escalera = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'escalera' field has been set.
      * @return True if the 'escalera' field has been set, false otherwise.
      */
    public boolean hasEscalera() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'escalera' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearEscalera() {
      escalera = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'letra' field.
      * @return The value.
      */
    public java.lang.CharSequence getLetra() {
      return letra;
    }

    /**
      * Sets the value of the 'letra' field.
      * @param value The value of 'letra'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setLetra(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.letra = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'letra' field has been set.
      * @return True if the 'letra' field has been set, false otherwise.
      */
    public boolean hasLetra() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'letra' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearLetra() {
      letra = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'numeroTransporte' field.
      * @return The value.
      */
    public java.lang.CharSequence getNumeroTransporte() {
      return numeroTransporte;
    }

    /**
      * Sets the value of the 'numeroTransporte' field.
      * @param value The value of 'numeroTransporte'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setNumeroTransporte(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.numeroTransporte = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'numeroTransporte' field has been set.
      * @return True if the 'numeroTransporte' field has been set, false otherwise.
      */
    public boolean hasNumeroTransporte() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'numeroTransporte' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearNumeroTransporte() {
      numeroTransporte = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'piso' field.
      * @return The value.
      */
    public java.lang.CharSequence getPiso() {
      return piso;
    }

    /**
      * Sets the value of the 'piso' field.
      * @param value The value of 'piso'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setPiso(java.lang.CharSequence value) {
      validate(fields()[28], value);
      this.piso = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'piso' field has been set.
      * @return True if the 'piso' field has been set, false otherwise.
      */
    public boolean hasPiso() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'piso' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearPiso() {
      piso = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'portal' field.
      * @return The value.
      */
    public java.lang.CharSequence getPortal() {
      return portal;
    }

    /**
      * Sets the value of the 'portal' field.
      * @param value The value of 'portal'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setPortal(java.lang.CharSequence value) {
      validate(fields()[29], value);
      this.portal = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'portal' field has been set.
      * @return True if the 'portal' field has been set, false otherwise.
      */
    public boolean hasPortal() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'portal' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearPortal() {
      portal = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'puerta' field.
      * @return The value.
      */
    public java.lang.CharSequence getPuerta() {
      return puerta;
    }

    /**
      * Sets the value of the 'puerta' field.
      * @param value The value of 'puerta'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setPuerta(java.lang.CharSequence value) {
      validate(fields()[30], value);
      this.puerta = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'puerta' field has been set.
      * @return True if the 'puerta' field has been set, false otherwise.
      */
    public boolean hasPuerta() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'puerta' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearPuerta() {
      puerta = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'telefono' field.
      * @return The value.
      */
    public java.lang.CharSequence getTelefono() {
      return telefono;
    }

    /**
      * Sets the value of the 'telefono' field.
      * @param value The value of 'telefono'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setTelefono(java.lang.CharSequence value) {
      validate(fields()[31], value);
      this.telefono = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'telefono' field has been set.
      * @return True if the 'telefono' field has been set, false otherwise.
      */
    public boolean hasTelefono() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'telefono' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearTelefono() {
      telefono = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'referenciaExpediente' field.
      * @return The value.
      */
    public java.lang.CharSequence getReferenciaExpediente() {
      return referenciaExpediente;
    }

    /**
      * Sets the value of the 'referenciaExpediente' field.
      * @param value The value of 'referenciaExpediente'.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder setReferenciaExpediente(java.lang.CharSequence value) {
      validate(fields()[32], value);
      this.referenciaExpediente = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'referenciaExpediente' field has been set.
      * @return True if the 'referenciaExpediente' field has been set, false otherwise.
      */
    public boolean hasReferenciaExpediente() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'referenciaExpediente' field.
      * @return This builder.
      */
    public com.rubenvillar.apache.flink.RegistroType.Builder clearReferenciaExpediente() {
      referenciaExpediente = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RegistroType build() {
      try {
        RegistroType record = new RegistroType();
        record.anyo = fieldSetFlags()[0] ? this.anyo : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.codUnidadRegistral = fieldSetFlags()[1] ? this.codUnidadRegistral : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.codigoPostal = fieldSetFlags()[2] ? this.codigoPostal : (java.lang.CharSequence) defaultValue(fields()[2]);
        if (destinosInternosBuilder != null) {
          record.destinosInternos = this.destinosInternosBuilder.build();
        } else {
          record.destinosInternos = fieldSetFlags()[3] ? this.destinosInternos : (com.rubenvillar.apache.flink.DestinosInternosType) defaultValue(fields()[3]);
        }
        record.documentoInteresado = fieldSetFlags()[4] ? this.documentoInteresado : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.entidad = fieldSetFlags()[5] ? this.entidad : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.estado = fieldSetFlags()[6] ? this.estado : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.fechaAsiento = fieldSetFlags()[7] ? this.fechaAsiento : (java.lang.Long) defaultValue(fields()[7]);
        record.fechaDocumento = fieldSetFlags()[8] ? this.fechaDocumento : (java.lang.Long) defaultValue(fields()[8]);
        record.fechaValor = fieldSetFlags()[9] ? this.fechaValor : (java.lang.Long) defaultValue(fields()[9]);
        record.idEntidad = fieldSetFlags()[10] ? this.idEntidad : (java.lang.Integer) defaultValue(fields()[10]);
        record.municipio = fieldSetFlags()[11] ? this.municipio : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.nombreInteresado = fieldSetFlags()[12] ? this.nombreInteresado : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.nucleo = fieldSetFlags()[13] ? this.nucleo : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.numero = fieldSetFlags()[14] ? this.numero : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.provincia = fieldSetFlags()[15] ? this.provincia : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.resultado = fieldSetFlags()[16] ? this.resultado : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.resumen = fieldSetFlags()[17] ? this.resumen : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.tipoDocumento = fieldSetFlags()[18] ? this.tipoDocumento : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.tipoInteresado = fieldSetFlags()[19] ? this.tipoInteresado : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.tipoVia = fieldSetFlags()[20] ? this.tipoVia : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.unidadRegistral = fieldSetFlags()[21] ? this.unidadRegistral : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.via = fieldSetFlags()[22] ? this.via : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.bloque = fieldSetFlags()[23] ? this.bloque : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.correoElectronico = fieldSetFlags()[24] ? this.correoElectronico : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.escalera = fieldSetFlags()[25] ? this.escalera : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.letra = fieldSetFlags()[26] ? this.letra : (java.lang.CharSequence) defaultValue(fields()[26]);
        record.numeroTransporte = fieldSetFlags()[27] ? this.numeroTransporte : (java.lang.CharSequence) defaultValue(fields()[27]);
        record.piso = fieldSetFlags()[28] ? this.piso : (java.lang.CharSequence) defaultValue(fields()[28]);
        record.portal = fieldSetFlags()[29] ? this.portal : (java.lang.CharSequence) defaultValue(fields()[29]);
        record.puerta = fieldSetFlags()[30] ? this.puerta : (java.lang.CharSequence) defaultValue(fields()[30]);
        record.telefono = fieldSetFlags()[31] ? this.telefono : (java.lang.CharSequence) defaultValue(fields()[31]);
        record.referenciaExpediente = fieldSetFlags()[32] ? this.referenciaExpediente : (java.lang.CharSequence) defaultValue(fields()[32]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RegistroType>
    WRITER$ = (org.apache.avro.io.DatumWriter<RegistroType>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RegistroType>
    READER$ = (org.apache.avro.io.DatumReader<RegistroType>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
